{
	"id": "841c5b47bf1b55c812236c44e862a00c",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"Event.sol": {
				"content": "//SPDX-K-License-Identifier: Unilicense\r\npragma solidity >= 0.5.0 < 0.9.0;\r\n\r\n contract EventContract {\r\n     struct Event{\r\n         address organizer;\r\n         \r\n     }\r\n }"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Event.sol": {
				"EventContract": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"Event.sol\":79:175  contract EventContract {\r... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"Event.sol\":79:175  contract EventContract {\r... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212200b1458cd3cbbd1a7822513c22a00926fabfe6cd6f894ce49ecf7ab1e6dbab02964736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea26469706673582212200b1458cd3cbbd1a7822513c22a00926fabfe6cd6f894ce49ecf7ab1e6dbab02964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x3F DUP1 PUSH1 0x1D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND EQ PC 0xCD EXTCODECOPY 0xBB 0xD1 0xA7 DUP3 0x25 SGT 0xC2 0x2A STOP SWAP3 PUSH16 0xABFE6CD6F894CE49ECF7AB1E6DBAB029 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "79:96:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052600080fdfea26469706673582212200b1458cd3cbbd1a7822513c22a00926fabfe6cd6f894ce49ecf7ab1e6dbab02964736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SIGNEXTEND EQ PC 0xCD EXTCODECOPY 0xBB 0xD1 0xA7 DUP3 0x25 SGT 0xC2 0x2A STOP SWAP3 PUSH16 0xABFE6CD6F894CE49ECF7AB1E6DBAB029 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "79:96:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12600",
								"executionCost": "66",
								"totalCost": "12666"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 79,
									"end": 175,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 79,
									"end": 175,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200b1458cd3cbbd1a7822513c22a00926fabfe6cd6f894ce49ecf7ab1e6dbab02964736f6c63430008070033",
									".code": [
										{
											"begin": 79,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 79,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 79,
											"end": 175,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 79,
											"end": 175,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 79,
											"end": 175,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 79,
											"end": 175,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Event.sol\":\"EventContract\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Event.sol\":{\"keccak256\":\"0x2adfdf1c4b7fce5f1f70c8375ce10e24514b884f6478b1d11a63da6a6b505336\",\"urls\":[\"bzz-raw://b852a7f77d6f6c819d9c6f566e8edd28604d5f2be7ccecdfcad57d510cb8ab81\",\"dweb:/ipfs/QmTC7QvSxag79FHS5w79cgvhLBuq6jX1qfDdh4kSiXjKHy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> Event.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "Event.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Event.sol": {
				"ast": {
					"absolutePath": "Event.sol",
					"exportedSymbols": {
						"EventContract": [
							5
						]
					},
					"id": 6,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0",
								"<",
								"0.9",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "41:33:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 5,
							"linearizedBaseContracts": [
								5
							],
							"name": "EventContract",
							"nameLocation": "88:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "EventContract.Event",
									"id": 4,
									"members": [
										{
											"constant": false,
											"id": 3,
											"mutability": "mutable",
											"name": "organizer",
											"nameLocation": "142:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 4,
											"src": "134:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "134:7:0",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Event",
									"nameLocation": "117:5:0",
									"nodeType": "StructDefinition",
									"scope": 5,
									"src": "110:61:0",
									"visibility": "public"
								}
							],
							"scope": 6,
							"src": "79:96:0",
							"usedErrors": []
						}
					],
					"src": "41:134:0"
				},
				"id": 0
			}
		}
	}
}